---
openapi: 3.0.2
info:
  title: Amahorse API
  version: "1.0"
servers:
  - url: http://api.amahorse.localhost
components:
  securitySchemes:
    OAuth-Basic:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: /oauth/token
          scopes:
            guest: Grants read access
            user: Grants write access
            administrator: Grants access to admin operations
            superadministrator: Grants access to superadmin operations
  parameters:
    X-Am-ClientType:
      required: false
      in: header
      name: X-Am-ClientType
      schema:
        type: string
        format: string
        enum:
          - b2c
          - b2b
          - horeca
        default: b2c
    X-Am-Language:
      required: false
      in: header
      name: X-Am-Language
      schema:
        type: string
        format: string
        default: it
    X-Am-Locale:
      required: false
      in: header
      name: X-Am-Locale
      schema:
        type: string
        format: string
        enum:
          - it-IT
          - it-CH
          - en-US
        default: it-IT
    X-Am-IdCart:
      required: false
      in: header
      name: X-Am-IdCart
      schema:
        type: integer
        format: int32
        default: null
    X-Am-IdResellers:
      required: false
      in: header
      name: X-Am-IdResellers
      schema:
        type: integer
        format: int32
        default: null
    X-Am-IdStores:
      required: false
      in: header
      name: X-Am-IdStores
      schema:
        type: integer
        format: int32
        default: null
    X-Am-IdAgents:
      required: false
      in: header
      name: X-Am-IdAgents
      schema:
        type: integer
        format: int32
        default: null
    X-Am-IdCountries:
      required: false
      in: header
      name: X-Am-IdCountries
      schema:
        type: integer
        format: int32
        default: null
    X-Am-Domain:
      required: true
      in: header
      name: X-Am-Domain
      schema:
        type: string
        format: string
        default: amahorse.com
  schemas:
    Config:
      type: object
      properties:
        default:
          type: object
          description: Prametri di default sono tutti sovrascrivibili da tag
        configurator:
          type: object
          description: Parametri configuratore sono fissi
        locale:
          type: object
          description: Parametri del locale
    User:
      type: object
      properties: 
        email:
          required: true
          description: Email
          type: string
        first_name:
          required: true
          description: Nome
          type: string
        last_name:
          required: true
          description: Cognome
          type: string
        password:
          required: false
          description: Password
          type: string
        password_repeat:
          required: false
          description: Ripeti Password
          type: string 
        privacy:
          required: true
          description: Checkbox per la privacy
          type: string
        type:
          required: false
          description: Tipo utente b2b, b2c e horeca, se non settato prende di default quello store
          type: string 
          default: b2c
        vat_number:
          required: false
          description: Obbligatorio per utenti type b2b e horeca
          type: string 
        business_name:
          required: false
          description: Obbligatorio per utenti type b2b e horeca
          type: string 
paths:
  /oauth/token:
      get:
        description: Richiede oauth token per client id
        tags:
          - autenticazione
        parameters:
        - in: query
          name: client_id
          default: xETZNsNHBMiDqLTV.45c19b29012947fa5c8f44c755fe901e.1698312544Z6SY
          schema:
            type: string
        responses:
          200: 
            description: OK, salvare nuovo access_token in session e refresh_token in cookie
          403: 
            description: Client id non valido, accesso non consentito
      post:
        description: Refresh token
        tags:
          - autenticazione
        requestBody:
          required: true
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    client_id:
                      type: string
                      default: lJ4YyXzghqOoQgO8.e7233abf1f42adec51ed8df65106f635.16793916723YmK
                    refresh_token:
                      type: string
                      default: opDE4I6GOAgdfDk7.3faba64dc304dafb08e9acc56d4f9e46.1681812076Royf
        responses:
          200: 
            description: OK, salvare nuovo access_token in session
          400:
            description: Bad request (parametri mancanti o non validi)
          401:
            description: Token scaduto, va richiesto nuovo access token
          403: 
            description: Token revocato o con accesso non consentito
  /oauth/login:
    post:
      description: Richiede oauth token per client id
      tags:
        - autenticazione
      security: 
        - OAuth-Basic: []
      requestBody:
          required: true
          content:
            application/json:
                schema:
                  type: object
                  required:
                    - userName
                  properties:
                    client_id:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
      responses:
        200: 
          description: OK, salvare nuovo access_token in session e refresh_token in cookie
        403: 
          description: Client id non valido, accesso non consentito
  /oauth/logout:
    post:
      description: Revoca il token corrente, ritorna nuovo token guest
      tags:
        - autenticazione
      security: 
        - OAuth-Basic: []
      responses:
        200: 
          description: OK, salvare nuovo access_token in session e refresh_token in cookie
        403: 
          description: Client id non valido, accesso non consentito
  /oauth/check:
    post:
      description: Controlla se email esiste già
      tags:
        - autenticazione
      security: 
        - OAuth-Basic: []
      requestBody:
          required: true
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    email:
                      type: string
      responses:
        200: 
          description: OK
        403: 
          description: Email non consentita
  /oauth/register:
    post:
      security: 
        - OAuth-Basic: []
      description: Registrazione utente
      tags:
        - autenticazione
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      responses:
        200: 
          description: OK mandare nuovo utente
        405: 
          description: Dati mancanti
  /config:
    get:
      security: 
        - OAuth-Basic: []
      description: Configurazioni di base, senza questo il sistema non si può avviare,
        non richiede alcun parametro in header o in get
      tags:
        - base
      responses:
        "200":
          description: Array multuplo di configurazioni
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Config"
  /currencies:
    get:
      security: 
        - OAuth-Basic: []
      description: Sincronizza cambio valute con Banca d'italia e ritorna valori
      tags:
        - base
      responses:
        "200":
          description: Nuove valute
  